---
import BaseLayout from "../layouts/BaseLayout.astro"
import RepairHeader from "../components/header/RepairHeader.astro"
---

<BaseLayout primaryTitle="Authentication Callback">
  <RepairHeader></RepairHeader>
  <section class="min-h-[70vh]">
    <div class="section-content my-16 flex flex-col gap-8">
      <div>
        <div>
          <div id="status-text" class="text-xl font-bold">处理登录中...</div>
          <div id="status-subtitle" class="text-sm text-gray-700">
            正在验证身份
          </div>
        </div>
        <div class="mt-4">
          <div id="loading-spinner" class="flex justify-center my-8">
            <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-primary"></div>
          </div>
          <div id="status-message" class="text-gray-700"></div>
        </div>
      </div>
      <div id="continue-button-wrapper" class="mt-4 hidden">
        <button
          id="continue-button"
          class="px-6 py-2 bg-primary text-white rounded-lg hover:bg-primary/90 transition-colors font-medium"
        >
          继续
        </button>
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  .text-success {
    color: #10b981;
  }

  .text-error {
    color: #ef4444;
  }
</style>

<script>
import { makeLogtoClient } from "../utils/auth"

const statusText = document.getElementById("status-text")
const statusSubtitle = document.getElementById("status-subtitle")
const statusMessage = document.getElementById("status-message")
const continueButtonWrapper = document.getElementById("continue-button-wrapper")
const continueButton = document.getElementById("continue-button")
const loadingSpinner = document.getElementById("loading-spinner")

const updateStatus = (title, subtitle, message, isError = false) => {
  statusText.textContent = title
  statusSubtitle.textContent = subtitle
  statusMessage.textContent = message

  if (isError) {
    statusText.classList.add("text-error")
    statusText.classList.remove("text-success")
  }
  else {
    statusText.classList.add("text-success")
    statusText.classList.remove("text-error")
  }
}

const showContinueButton = () => {
  loadingSpinner.classList.add("hidden")
  continueButtonWrapper.classList.remove("hidden")
}

const redirectToHome = () => {
  window.location.assign("/")
}

continueButton.addEventListener("click", redirectToHome)

// Show manual continue button after 5 seconds as fallback
const fallbackTimer = setTimeout(() => {
  updateStatus(
    "等待时间较长...",
    "如果未自动跳转，请手动继续",
    "你可以点击下方按钮手动继续。",
    false,
  )
  showContinueButton()
}, 5000)

const callbackHandler = async (logtoClient) => {
  console.log("callbackHandler")
  try {
    await logtoClient.handleSignInCallback(window.location.href)

    if (!logtoClient.isAuthenticated) {
      console.log("User not authenticated")
      clearTimeout(fallbackTimer)
      updateStatus(
        "认证失败",
        "无法验证你的登录",
        "无法验证你的登录信息。正在跳转到首页...",
        true,
      )
      showContinueButton()
      setTimeout(redirectToHome, 2000)
      return
    }

    // Authentication successful
    clearTimeout(fallbackTimer)
    updateStatus(
      "登录成功！",
      "验证完成",
      "正在跳转到首页...",
    )
    showContinueButton()
    setTimeout(redirectToHome, 1500)
  }
  catch (error) {
    console.log(error)
    clearTimeout(fallbackTimer)
    updateStatus(
      "认证错误",
      "登录过程中出现错误",
      `登录过程中出现错误：${error.message || "未知错误"}。点击下方按钮返回首页。`,
      true,
    )
    showContinueButton()
  }
}

console.log("Callback page loaded")
try {
  const logtoClient = makeLogtoClient()
  callbackHandler(logtoClient)
}
catch (error) {
  console.log(error)
  clearTimeout(fallbackTimer)
  updateStatus(
    "初始化错误",
    "无法初始化认证客户端",
    "无法初始化认证客户端。点击下方按钮返回首页。",
    true,
  )
  showContinueButton()
}
</script>
